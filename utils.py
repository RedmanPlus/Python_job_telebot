import requests
from aiogram.types import CallbackQuery
from aiogram_dialog import DialogManager
from aiogram_dialog.widgets.kbd import Button
from serializers import Vacancy

def get_vacancies_json(params: dict):
    response = requests.get("https://devseye.ru/api/vacancy", params=params)
    return response.json()

def get_vacancy_message_text(params: dict) -> list:
    response = get_vacancies_json(params)
    print(f'\n\n\n\nParams: {params}\n\n\n\n')
    try:
        vacancies = [Vacancy(vac_dct) for vac_dct in response['results']]
        if len(vacancies) < 1:
            return ["–ù–µ—Ç –≤–∞–∫–∞–Ω—Å–∏–π —Å –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ ü§î"]
    except KeyError:
        return ["–ë–æ–ª—å—à–µ –≤–∞–∫–∞–Ω—Å–∏–π —Å —Ç–∞–∫–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –Ω–µ—Ç ü§î"]
    return_lst = [f"""
<strong>–î–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏:</strong> {vacancy.datetime.date()}
<strong>–†–æ–ª—å:</strong> {vacancy.role}
<strong>–ö–ª—é—á–µ–≤—ã–µ –Ω–∞–≤—ã–∫–∏, —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏:</strong> {', '.join(vacancy.technologies)}
<strong>–ó–∞—Ä–ø–ª–∞—Ç–∞:</strong> –æ—Ç {vacancy.min_salary} –¥–æ {vacancy.max_salary} {vacancy.salary_currency}
<strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> 
{vacancy.desc}
<strong>–ó–∞–¥–∞—á–∏:</strong> 
{vacancy.tasks}
<strong>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</strong> 
{vacancy.requirements}
<strong>–°—Å—ã–ª–∫–∞:</strong> https://t.me/{vacancy.channel}/{vacancy.message_id}
""" 
    for vacancy in vacancies]
    return return_lst

async def cancel(c: CallbackQuery, b: Button, d: DialogManager):
    await c.message.delete()
    await c.message.answer(text=f"–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
    await d.mark_closed()
    await d.data['state'].reset_state(with_data=True)
    